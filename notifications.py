import pandas as pd
from datetime import datetime
import random

# –ü—Ä–∏–º–µ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–º–æ–∂–Ω–æ —á–∏—Ç–∞—Ç—å –∏–∑ CSV)
transactions = pd.read_csv("/Users/dana/Downloads/test/st/transactions.csv")
transactions["date"] = pd.to_datetime(transactions["date"])
print(transactions['category'].unique())
# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –∏—Å–ª–∞–º—Å–∫–∏–º —Ü–µ–ª—è–º
GOALS = {
    "education": ["Education"],
    "business": ["Business"],
    "property": ["Property", "–∏–º—É—â–µ—Å—Ç–≤–æ"],
    "healthcare": ["Healthcare"],
    # "travel": ["Travel"],
    "personal_needs": ["Personal_needs", "Personal needs"],
    "auto": ["Auto"],
    "deposit": ["Deposit"],
    "card": ["Card"],
    "charity": ["Charity", "Donation", "Zakat", "Waqf"]
}

NOW = datetime(2025, 10, 18)

# =======================================================
# === 1. –†–∞—Å—á—ë—Ç RFM –∏ —Ü–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
# =======================================================

def compute_insight(df_user: pd.DataFrame):
    now = NOW
    R = (now - df_user["date"].max()).days
    F = len(df_user)
    M = df_user["amount"].sum()

    total = df_user["amount"].sum()
    shares = {}
    for goal, cats in GOALS.items():
        amt = df_user[df_user["category"].isin(cats)]["amount"].sum()
        shares[goal] = round(amt / total, 3) if total > 0 else 0

    main_focus = max(shares, key=shares.get) if shares else None
    charity_ratio = shares.get("charity", 0)
    print(f"R: {R}, F: {F}, M: {M}, shares: {shares}, main_focus: {main_focus}, charity_ratio: {charity_ratio}")
    return {"R": R, "F": F, "M": M, "shares": shares, "main_focus": main_focus, "charity_ratio": charity_ratio}

# =======================================================
# === 2. –ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è ===
# =======================================================

def decide_notification(insight):
    R = insight["R"]
    F = insight["F"]
    M = insight["M"]
    shares = insight["shares"]
    focus = insight["main_focus"]

    # –ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    if shares.get("charity", 0) >= 0.25:
        return random.choice([
            "–í—ã –ø—Ä–æ—è–≤–ª—è–µ—Ç–µ —â–µ–¥—Ä–æ—Å—Ç—å üåô –•–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π Waqf-—Å—á—ë—Ç?",
            "–í–∏–∂—É —á–∞—Å—Ç—ã–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è üíñ –•–æ—Ç–∏—Ç–µ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏?",
            "–í—ã —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç–µ –¥—Ä—É–≥–∏–º ü§≤ –ü–æ–∫–∞–∑–∞—Ç—å, –∫–∞–∫ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—ã–ø–ª–∞—Ç—ã –∑–∞–∫—è—Ç–∞?"
        ])

    # –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
    if focus == "education":
        return random.choice([
            "–í—ã –∞–∫—Ç–∏–≤–Ω–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä—É–µ—Ç–µ –≤ –∑–Ω–∞–Ω–∏—è üìö –ü–æ–¥–æ–±—Ä–∞—Ç—å —Ä–∞—Å—Å—Ä–æ—á–∫—É –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ?",
            "–í–∏–∂—É –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ üéì –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å —Ö–∞–ª—è–ª—å-–∫—É—Ä—Å—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è?",
            "–í–∞—à —Ñ–æ–∫—É—Å ‚Äî –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ üè´ –•–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã —É—á–µ–±–Ω—ã—Ö –≥—Ä–∞–Ω—Ç–æ–≤?"
        ])

    # –ë–∏–∑–Ω–µ—Å
    if focus == "business":
        return random.choice([
            "–£ –≤–∞—Å –±–∏–∑–Ω–µ—Å-–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ üíº –ü–æ–¥–æ–±—Ä–∞—Ç—å —Ö–∞–ª—è–ª—å–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã?",
            "–ê–∫—Ç–∏–≤–Ω—ã –≤ –±–∏–∑–Ω–µ—Å–µ üìä –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π?",
            "–ó–∞–º–µ—Ç–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –±–∏–∑–Ω–µ—Å–µ üíπ –•–æ—Ç–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—é –æ–±–æ—Ä–æ—Ç–∞?"
        ])

    # –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å
    if focus == "property":
        return random.choice([
            "–ò–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ üè† –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Ö–∞–ª—è–ª—å–Ω–æ–π –∏–ø–æ—Ç–µ–∫–µ (–ò–¥–∂–∞—Ä–∞)?",
            "–í–∏–∂—É –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –∂–∏–ª—å—é üè° –•–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ä–∞—Å—Å—Ä–æ—á–∫—É –±–µ–∑ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤?",
            "–ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ–∫—É–ø–∫—É –∂–∏–ª—å—è? üïå –ü–æ–¥–æ–±—Ä–∞—Ç—å –∏—Å–ª–∞–º—Å–∫—É—é –∏–ø–æ—Ç–µ–∫—É?"
        ])

    # –ê–≤—Ç–æ
    if focus == "auto":
        return random.choice([
            "–í—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –∞–≤—Ç–æ üöó –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ —Ä–∞—Å—Å—Ä–æ—á–∫—É –±–µ–∑ —Ä–∏–±—ã?",
            "–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –∞–≤—Ç–æ—Å—Ñ–µ—Ä–µ üõû –ü–æ–¥–æ–±—Ä–∞—Ç—å —Ö–∞–ª—è–ª—å–Ω—ã–π –∞–≤—Ç–æ–ª–∏–∑–∏–Ω–≥?",
            "–ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ–∫—É–ø–∫—É –º–∞—à–∏–Ω—ã? üöò –ï—Å—Ç—å –≤—ã–≥–æ–¥–Ω—ã–µ –∏—Å–ª–∞–º—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!"
        ])

    # –î–µ–ø–æ–∑–∏—Ç—ã / –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è
    if shares.get("deposit", 0) + shares.get("card", 0) > 0.5:
        return random.choice([
            "–í—ã –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –∫–æ–ø–∏—Ç–µ üí∞ –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã?",
            "–ê–∫—Ç–∏–≤–Ω—ã –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏ üè¶ –•–æ—Ç–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–ª–∞–Ω?",
            "–í—ã —Ö–æ—Ä–æ—à–æ —É–ø—Ä–∞–≤–ª—è–µ—Ç–µ –±–∞–ª–∞–Ω—Å–æ–º üíπ –ü–æ–¥–æ–±—Ä–∞—Ç—å –≥–∏–±–∫–∏–π —Ö–∞–ª—è–ª—å-–¥–µ–ø–æ–∑–∏—Ç?"
        ])

    # –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ
    if R > 60 and F < 5:
        return random.choice([
            "–î–∞–≤–Ω–æ –Ω–µ –±—ã–ª–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ‚è≥ –ù–∞–ø–æ–º–Ω–∏—Ç—å –æ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö?",
            "–í—ã –Ω–µ–º–Ω–æ–≥–æ –ø—Ä–æ–ø–∞–ª–∏ ü§î –ü–æ–¥—Å–∫–∞–∑–∞—Ç—å —Å–≤–µ–∂–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è?",
            "–ê–∫–∫–∞—É–Ω—Ç –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω üí§ –•–æ—Ç–∏—Ç–µ —è –ø–æ–º–æ–≥—É —Å –Ω–æ–≤—ã–º–∏ –∏–¥–µ—è–º–∏?"
        ])

    # –ë–∞–∑–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
    if M > 0:
        return random.choice([
            "–•–æ—Ç–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π?",
            "–ü–æ–¥–æ–±—Ä–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π?",
            "–ü–æ–∫–∞–∑–∞—Ç—å, –∫–∞–∫ —É–ª—É—á—à–∏—Ç—å –±–∞–ª–∞–Ω—Å —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π?"
        ])
    return None

# =======================================================
# === 3. –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ===
# =======================================================

def run_notifications(transactions):
    notifications = []
    for uid, group in transactions.groupby("user_id"):
        insight = compute_insight(group)
        msg = decide_notification(insight)
        if msg:
            notifications.append({"user_id": uid, "message": msg, "focus": insight["main_focus"]})
    return pd.DataFrame(notifications)

# =======================================================
# === 4. –†–µ–∑—É–ª—å—Ç–∞—Ç ===
# =======================================================

if __name__ == "__main__":
    df = run_notifications(transactions)
    for r in df.itertuples():
        print(f"User {r.user_id}: {r.message} (Focus: {r.focus})")